pipeline {
  agent {
    docker {
      image 'anushkafarkade/maven-jdk17-docker-cli:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  options {
    skipDefaultCheckout(true)
  }

  environment {
    DOCKER_IMAGE = "anushkafarkade/ultimate-cicd:${BUILD_NUMBER}"
    SONAR_URL = "http://56.228.30.148:9000"
  }

  stages {

    stage('Clean Workspace') {
      steps {
        sh '''
          echo "[INFO] Cleaning Jenkins workspace..."
          rm -rf $WORKSPACE/*
        '''
      }
    }

    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[url: 'https://github.com/1durvesh/CICD.git']]
        ])
      }
    }

    stage('Debug Workspace') {
      steps {
        sh 'pwd'
        sh 'ls -la'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t $DOCKER_IMAGE .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }
  }

  post {
    always {
      echo "Pipeline finished."
    }
  }
}

// âœ… Update Kubernetes Deployment File on GitHub
stage('Update Deployment File') {
  agent any
  environment {
    GIT_REPO_NAME = "CICD"
    GIT_USER_NAME = "1durvesh"
  }
  steps {
    checkout scm  // ðŸ‘ˆ brings back .git folder to this stage
    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
      sh '''
        echo "[INFO] Updating deployment file with new image tag..."
        git config user.email "durveshkolhe81@gmail.com"
        git config user.name "durvesh"

        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "Nothing to commit"
        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
      '''
    }
  }
}
